package $modelPackage;

#if($config.data)
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
#end
#if($config.swagger)
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
import com.mybatisflex.annotation.Column;
import com.mybatisflex.annotation.Id;
import com.mybatisflex.annotation.KeyType;
import com.mybatisflex.annotation.Table;

/**
 * $tableComment 实体类。
 *
 * @author $author
 * @since $since
 */
#if($config.data)
@Data
#end
#if($config.builder)
@Builder
#end
#if($config.noArgsConstructor)
@NoArgsConstructor
#end
#if($config.allArgsConstructor)
@AllArgsConstructor
#end
@ApiModel(value = "$tableComment", description = "$tableComment")
@Table("$tableName")
public class ${className}Entity {
    #foreach($column in $table.columnList)
    #if($config.swagger)
    @ApiModelProperty(value = "$column.comment")
    #end
    #if($config.isPrimaryKey)
    @Id(keyType = KeyType.Auto)
    #else
    @Column("$column.name")
    #end
    private $column.fieldType  $column.fieldName;
#end

###if($config.data)
##    #for(column: table.columns)
##    public #(column.propertySimpleType) #(column.getterMethod())() {
##        return #(column.property);
##    }
##
##    public void #(column.setterMethod())(#(column.propertySimpleType) #(column.property)) {
##        this.#(column.property) = #(column.property);
##    }
###end
        }
